version: "3"

networks:
  database:
  server:

volumes:
  mysql-data:

services:
  php:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: php
    volumes:
      - ./site:/site:cached
    restart: unless-stopped
    networks:
      - database
      - server
    depends_on:
      - mysql
    working_dir: /site
    command: /bin/bash -c "npm install && ./node_modules/bower/bin/bower install --allow-root && ./node_modules/gulp-cli/bin/gulp.js && composer install && php-fpm"

  php-api:
    build:
      context: .
      dockerfile: ./Dockerfile_api
    container_name: php-api
    volumes:
      - ./api:/api:cached
    restart: unless-stopped
    networks:
      - database
      - server
    working_dir: /api
    depends_on:
      - mysql
    command: /bin/bash -c "composer install && php-fpm"

  #admin:


  mysql:
    image: mariadb:latest
    volumes:
      - mysql-data:/var/lib/mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    networks:
      - database
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_USER: test
      MYSQL_PASSWORD: test
      MYSQL_DATABASE: test
    command: mysqld --sql_mode="" --default-authentication-plugin=mysql_native_password
    #--default-authentication-plugin=mysql_native_password

  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./site:/site:ro
      - ./api:/api:ro
      - ./default.template.conf:/etc/nginx/conf.d/mysite.template
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      - NGINX_HOST=rating
    command: /bin/bash -c "envsubst '${NGINX_HOST}' < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    networks:
      - server
    depends_on:
      - php